import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor

logging.basicConfig(level=logging.INFO)

# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –æ—Ç @BotFather
BOT_TOKEN = "8344183587:AAFElP7UxXJ8WSKvzqHmf-wvz9HOs_1auMA"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# --- –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã –ø–æ –≥–æ—Ä–æ–¥–∞–º ---
CITY_CHANNELS = {
    "–ú–æ—Å–∫–≤–∞": "https://t.me/amorefloraMoscow",
    "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥": "https://t.me/amorefloraSanktPetersburg",
    "–ö–∞–∑–∞–Ω—å": "https://t.me/amorefloraKazan",
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥": "https://t.me/amorefloraEkaterenburg"
}

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(KeyboardButton("üå∏ –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥"))

cities_menu = ReplyKeyboardMarkup(resize_keyboard=True)
for city in CITY_CHANNELS.keys():
    cities_menu.add(city)
cities_menu.add("üîô –ù–∞–∑–∞–¥")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ---
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    text = (
        "üå∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *FlowerTime*!\n\n"
        "–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –≤ —Å—Ñ–µ—Ä–µ –¥–æ—Å—Ç–∞–≤–∫–∏ —Ü–≤–µ—Ç–æ–≤ üíê. –£–∂–µ –±–æ–ª–µ–µ *6 –ª–µ—Ç* –º—ã –¥–µ–ª–∞–µ–º –ª—é–¥–µ–π —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ, "
        "—Å–æ–∑–¥–∞–≤–∞—è –∫—Ä–∞—Å–æ—Ç—É –≤ –∫–∞–∂–¥–æ–º –±—É–∫–µ—Ç–µ.\n\n"
        "–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?\n"
        "‚ú® –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–ª–∞–Ω—Ç–∞—Ü–∏–∏ —Ä—è–¥–æ–º —Å –∫–∞–∂–¥—ã–º –≥–æ—Ä–æ–¥–æ–º ‚Äî —Ü–≤–µ—Ç—ã –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Å –≥—Ä—è–¥–∫–∏.\n"
        "üí∞ –°–∞–º—ã–µ –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã, –ø–æ—Ç–æ–º—É —á—Ç–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é, –±–µ–∑ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤.\n"
        "üöö –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ ‚Äî –æ—Ç –º–æ–º–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑–∞ –¥–æ —Å—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø—Ä–æ—Ö–æ–¥–∏—Ç –º–∏–Ω–∏–º—É–º –≤—Ä–µ–º–µ–Ω–∏.\n"
        "üéÅ –î–ª—è –Ω–∞—Å –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ ‚Äî —ç—Ç–æ –º–∞–ª–µ–Ω—å–∫–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫, –∏ –º—ã –¥–µ–ª–∞–µ–º –µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω—ã–º!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –±—É–∫–µ—Ç:"
    )
    await message.answer(text, reply_markup=main_menu, parse_mode="Markdown")

@dp.message_handler(lambda message: message.text == "üå∏ –í—ã–±—Ä–∞—Ç—å –≥–æ—Ä–æ–¥")
async def choose_city(message: types.Message):
    await message.answer("üèô –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", reply_markup=cities_menu)

@dp.message_handler(lambda message: message.text in CITY_CHANNELS.keys())
async def send_channel(message: types.Message):
    city = message.text
    channel_link = CITY_CHANNELS[city]
    await message.answer(
        f"üíê –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –î–ª—è –≥–æ—Ä–æ–¥–∞ *{city}* —É –Ω–∞—Å –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ üå∑\n\n"
        f"–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–¥–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –±—É–∫–µ—Ç: {channel_link}",
        parse_mode="Markdown"
    )
    # --- –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ü–∏—é ---
    await message.answer(
        "üî• –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!\n\n"
        "–ó–∞–∫–∞–∂–∏—Ç–µ *2 –±—É–∫–µ—Ç–∞* –∏ –ø–æ–ª—É—á–∏—Ç–µ –≤—Ç–æ—Ä–æ–π —Å–æ —Å–∫–∏–¥–∫–æ–π **-30%** üéÅ\n"
        "–£—Å–ø–µ–π—Ç–µ –ø–æ—Ä–∞–¥–æ–≤–∞—Ç—å –±–ª–∏–∑–∫–∏—Ö –ø—Ä—è–º–æ —Å–µ–≥–æ–¥–Ω—è ‚ù§Ô∏è",
        parse_mode="Markdown"
    )

@dp.message_handler(lambda message: message.text == "üîô –ù–∞–∑–∞–¥")
async def back(message: types.Message):
    await message.answer("‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)








 